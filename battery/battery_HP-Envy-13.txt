#Maintained by: RehabMan for: Laptop Patches
#battery_HP-Envy-13.txt
# created by xiegengcai 2018-05-02

# works for:scope
#  HP Envy 13-Ab026TU

# 访问16位属性方法
into method label B1B2 remove_entry;
# B1B2在battery_HP-Envy-14.txt是和B1B4插入到一样位置的，但导致107行116行补丁访问范围不对，改为在LPCB范围插入，即和设备H_EC同级
into Scope label _SB.PCI0.LPCB code_regex . insert
begin
Method (B1B2, 2, NotSerialized) { Return (Or (Arg0, ShiftLeft (Arg1, 8))) }\n
end;

# 访问32位属性方法 B1B4
into method label B1B4 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B4, 4, NotSerialized)\n
{\n
    Store(Arg3, Local0)\n
    Or(Arg2, ShiftLeft(Local0, 8), Local0)\n
    Or(Arg1, ShiftLeft(Local0, 8), Local0)\n
    Or(Arg0, ShiftLeft(Local0, 8), Local0)\n
    Return(Local0)\n
}\n
end;

# utility methods to read/write buffers from/to EC
into method label RE1B parent_label H_EC remove_entry;
into method label RECB parent_label H_EC remove_entry;
into device label H_EC insert
begin
Method (RE1B, 1, NotSerialized)
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

# ===================================拆字节========================================= #
# 在^^LPCB范围内（即EmbeddedControl所在范围）查找符合条件的属性定义
# 处理大于32位的属性（buffer）
# 将大于32位定义改名，好像没什么意义
into scope label ^^LPCB code_regex (BDN0,)\s+(56) replace_matched begin BDNX,%2,//%1%2 end;
into scope label ^^LPCB code_regex (BMN0,)\s+(128) replace_matched begin BNMX,%2,//%1%2 end;
into scope label ^^LPCB code_regex (BCT0,)\s+(128) replace_matched begin BCTX,%2,//%1%2 end;

# 改变大于32位属性访问方式，RECB方法访问
# GBTI 即在这个方法里有访问（通过RECB方法访问），如果多个方法方法，复制修改（16位、32位同理）
into method label GBTI code_regex \(BDN0, replaceall_matched begin (RECB(0x10,56), end;
into method label GBTI code_regex \(BMN0, replaceall_matched begin (RECB(0x20,128), end;
into method label GBTI code_regex \(BCT0, replaceall_matched begin (RECB(0x31,128), end;

# 拆分16位属性
into scope label ^^LPCB code_regex BDC0,\s+16 replace_matched begin DC00,8,DC01,8 end;
into scope label ^^LPCB code_regex BFC0,\s+16 replace_matched begin FC00,8,FC01,8 end;
into scope label ^^LPCB code_regex BFC1,\s+16 replace_matched begin FC10,8,FC11,8 end;
into scope label ^^LPCB code_regex BDV0,\s+16 replace_matched begin DV00,8,DV01,8 end;
into scope label ^^LPCB code_regex BDV1,\s+16 replace_matched begin DV10,8,DV11,8 end;
into scope label ^^LPCB code_regex BPR0,\s+16 replace_matched begin PR00,8,PR01,8 end;
into scope label ^^LPCB code_regex BRC0,\s+16 replace_matched begin RC00,8,RC01,8 end;
into scope label ^^LPCB code_regex BCC0,\s+16 replace_matched begin CC00,8,CC01,8 end;
into scope label ^^LPCB code_regex CV01,\s+16 replace_matched begin CV10,8,CV11,8 end;
into scope label ^^LPCB code_regex CV02,\s+16 replace_matched begin CV20,8,CV21,8 end;
into scope label ^^LPCB code_regex CV03,\s+16 replace_matched begin CV30,8,CV31,8 end;
into scope label ^^LPCB code_regex CV04,\s+16 replace_matched begin CV40,8,CV41,8 end;
into scope label ^^LPCB code_regex CV11,\s+16 replace_matched begin CV50,8,CV51,8 end;
into scope label ^^LPCB  code_regex CV11,\s+16 replace_matched begin CV50,8,CV51,8 end;
into scope label ^^LPCB code_regex BMD0,\s+16 replace_matched begin MD00,8,MD01,8 end;
into scope label ^^LPCB code_regex BMD1,\s+16 replace_matched begin MD10,8,MD11,8 end;
into scope label ^^LPCB code_regex BPV0,\s+16 replace_matched begin PV00,8,PV01,8 end;
into scope label ^^LPCB code_regex BSN0,\s+16 replace_matched begin SN00,8,SN01,8 end;
into scope label ^^LPCB code_regex BSN1,\s+16 replace_matched begin SN10,8,SN11,8 end;
into scope label ^^LPCB code_regex BCV0,\s+16 replace_matched begin BV00,8,BV01,8 end;
into scope label ^^LPCB code_regex CRG0,\s+16 replace_matched begin RG00,8,RG01,8 end;
into scope label ^^LPCB code_regex CBT0,\s+16 replace_matched begin BT00,8,BT01,8 end;

# 拆分32位属性
into scope code_regex BTY0,\s+32 replace_matched begin TY00,8,TY01,8,TY02,8,TY03,8 end;

# =================================属性访问修改======================================= #
# 属性访问要找到每个属性被那些方法访问，每个方法一个修正补丁，如
# BDC0被一个方法GBTI访问
# BFC0被BTIF、_Q09两个方法访问
# 访问16位属性
# 一个方法访问BDC0
into method label GBTI code_regex \(BDC0, replaceall_matched begin (B1B2(DC00,DC01), end;
# BFC0
into method label BTIF code_regex \(BFC0, replaceall_matched begin (B1B2(FC00,FC01), end;
into method label _Q09 code_regex \^\^BFC0\) replaceall_matched begin ^^B1B2(FC00,FC01)) end;
into method label BTIF code_regex \(BFC1, replaceall_matched begin (B1B2(FC10,FC11), end;
into method label GBTI code_regex \(BRC0, replaceall_matched begin (B1B2(RC00,RC01), end;
into method label BTST code_regex \(BRC0, replaceall_matched begin (B1B2(RC00,RC01), end;
# BDV0(
into method label GBTI code_regex \(BDV0, replaceall_matched begin (B1B2(DV00,DV01), end;
into method label BTIF code_regex \(BDV0, replaceall_matched begin (B1B2(DV00,DV01), end;
into method label BTIF code_regex \(BDV1, replaceall_matched begin (B1B2(DV10,DV11), end;
into method label GBTI code_regex \(BPR0, replaceall_matched begin (B1B2(PR00,PR01), end;
into method label BTST code_regex \(BPR0, replaceall_matched begin (B1B2(PR00,PR01), end;
into method label BTST code_regex \(BRC0, replaceall_matched begin (B1B2(RC00,RC01), end;
into method label GBTI code_regex \(BRC0, replaceall_matched begin (B1B2(RC00,RC01), end;
into method label _Q09 code_regex \(\^\^BRC0, replaceall_matched begin (^^B1B2(RC00,RC01), end;
into method label GBTI code_regex \(BCC0, replaceall_matched begin (B1B2(CC00,CC01), end;
into method label GBTI code_regex \(CV01, replaceall_matched begin (B1B2(CV10,CV11), end;
into method label GBTI code_regex \(CV02, replaceall_matched begin (B1B2(CV20,CV21), end;
into method label GBTI code_regex \(CV03, replaceall_matched begin (B1B2(CV30,CV31), end;
into method label GBTI code_regex \(CV04, replaceall_matched begin (B1B2(CV40,CV41), end;
into method label BTIF code_regex \(BMD0, replaceall_matched begin (B1B2(MD00,MD01), end;
into method label BTIF code_regex \(BMD1, replaceall_matched begin (B1B2(MD10,MD11), end;
into method label BTST code_regex \(BPV0, replaceall_matched begin (B1B2(PV00,PV01), end;
into method label GBTI code_regex \(BPV0, replaceall_matched begin (B1B2(PV00,PV01), end;
into method label BTIF code_regex \(BSN0, replaceall_matched begin (B1B2(SN00,SN01), end;
into method label GBTI code_regex \(BSN0, replaceall_matched begin (B1B2(SN00,SN01), end;
into method label BTIF code_regex \(BSN1, replaceall_matched begin (B1B2(SN10,SN11), end;
into method label GBTI code_regex \(BCV0, replaceall_matched begin (B1B2(BV00,BV01), end;
into method label GBTI code_regex \(CRG0, replaceall_matched begin (B1B2(RG00,RG01), end;
into method label GBTI code_regex \(CBT0, replaceall_matched begin (B1B2(BT00,BT01), end;


# 访问32位属性
into method label GBTI code_regex \(BTY0, replaceall_matched begin (B1B4(TY00,TY01,TY02,TY03), end;